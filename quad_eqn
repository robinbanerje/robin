#include <stdio.h>
#include<math.h>

struct complex
{
float r;
float i;
};

/* Function return 0 if roots are equal, 1 if roots are real not equal, 2 if roots are complex */
int findroots(float a,float b, float c, struct complex *r1)
{
    if(((b*b)-(4*a*c))>0)
    {
      r1->r=((-b+sqrt((b*b)-(4*a*c)))/(2*a));
      r1->i=((-b-sqrt((b*b)-(4*a*c)))/(2*a));
      return 1;  
    }
    
    else if(((b*b)-(4*a*c))==0)
    {
      r1->r=((-b)/(2*a));
      r1->i=((-b)/(2*a));
      return 0;
    }
    
    else
    {
      r1->r=(-b/(2*a)); 
      r1->i=((sqrt((b*b)-(4*a*c)))/(2*a));
      return 2;
    }
/* Your code here */
}

void printcomplex(struct complex r)
{
printf("(%f)+i(%f)  and  (%f)-i(%f)",r.r,r.i,r.r,r.i);
}

  main()
{
 int x,y,z,retval;
 printf("enter the coefficients:\n");
 scanf("%d%d%d",&x,&y,&z);            // code to get x,y,z
 struct complex r1;
 retval=findroots(x,y,z,&r1);
 switch (retval)
 {
 case 0: printf("\n roots are equal: %f  and  %f",r1.r,r1.i);
         break;
 case 1: printf("\nroots are real not equal: %f  and  %f",r1.r,r1.i);
         break;
 case 2: printf("\nroots are complex: ");
         printcomplex(r1);
         break;
 }
 return 0;
}
